{#
    Copyright (c) 2023 Coalesce. All rights reserved.
This script and its associated documentation are confidential and proprietary to Coalesce.
Unauthorized reproduction, distribution, or disclosure of this material is strictly prohibited.
Coalesce permits you to copy and modify this script for the purposes of using with Coalsce but
does not permit copying or modification for any other purpose.  
#}
{# == Node Type Version        : 1  == #}
{# == Node Type Name           : UNPIVOT NODE == #}
{# == Node Type Description    : This node transforms columns to rows.== #}
{#Release date:20250113 Version:1.0.0#}

{% if desiredState == currentState %}

{{ stage('Nothing to do.') }}
select 1 = 0

{% elif desiredState == undefined %}

    {# Table or View Name #}
    {% set targetObjectDatabase = ref_no_link(currentState.node.location.name, currentState.node.name).split('.')[0] %} 
    {% set targetObjectSchema = ref_no_link(currentState.node.location.name, currentState.node.name).split('.')[1] %} 
    {% set fullyQualifiedTargetObjectName = ref_no_link(currentState.node.location.name, currentState.node.name) %}
    
    {% if currentState.node.materializationType == 'view' %}

     {{ stage('Drop Table or View', true, "sql", "drop") }}
     DROP {{ currentState.node.materializationType }} IF EXISTS {{ fullyQualifiedTargetObjectName }}

    {% else %}
     
       {{ stage('Drop ' + currentState.node.materializationType , true, "sql", "drop") }}
       DROP TABLE IF EXISTS {{ fullyQualifiedTargetObjectName }}

    {% endif %}

{% elif currentState == undefined or (currentState != undefined and desiredState != currentState) %} 

              {%if currentState != defined %}
              {%if currentState.node.materializationType != desiredState.node.materializationType %}

                     {{ stage('Drop ' + currentState.node.materializationType + ' ' + ref_no_link(currentState.node.location.name, currentState.node.name), true, "sql", "drop") }}

                     {% if currentState.node.materializationType == 'view' %} 
                      DROP {{currentState.node.materializationType}} IF EXISTS {{ ref_no_link(currentState.node.location.name, currentState.node.name) }}
                     {% else %}
                      DROP TABLE IF EXISTS {{ ref_no_link(currentState.node.location.name, currentState.node.name) }}
                     {% endif %}
                {%endif%}
                {%endif%}


          {%- set ns = namespace(pcolumn = [],collist = []) %}
  
         {#Infer Unpivot structure#}
          {%if desiredState.config.inferunpivot == true %}

                  {%if desiredState.config.tabValueColumn.get('items') | map(attribute='valColDropdown')|list|first == None%}
                      {%set ns.pcolumn = desiredState.config.tabValueColumn.get('items') | map(attribute='ColTextBox')|list%} 
                   {%else%}
                      {%set ns.pcolumn = desiredState.config.tabValueColumn.get('items') | map(attribute='valColDropdown.name') | list%}
                    {%endif%}
          {%else%}
                  {%set ns.pcolumn = desiredState.config.tabValueColumn.get('items') | map(attribute='ColTextBox')|list%}
          {%endif%}

          {%for col in ns.pcolumn%}

              {%set ns.collist = ns.collist + ['"'+col+'"']%}

           {%endfor%}

         {% set source = desiredState.sources[0] %}
         {%set joinclause = source.join%}
      {%if desiredState.config.inferunpivot == true or desiredState.node.materializationType == 'view' %}
         {{ stage('Create Unpivot '+ desiredState.node.materializationType) }}             
              
              
            CREATE OR REPLACE {{desiredState.node.materializationType}} {{ ref_no_link(desiredState.node.location.name, desiredState.node.name) }}
              AS
             ( 
               SELECT                 
               {% for col in source.columns %}
                  {%if col.name not in ns.collist|join(',') and col.name|upper != desiredState.config.nameColTextBox|upper and col.name|upper != desiredState.config.valColTextBox|upper  %}
			            {{ get_source_transform(col) }} AS "{{ col.name }}", 
                  {%endif%}
		        {% endfor %}                
			             {{desiredState.config.nameColTextBox}},
                   {{desiredState.config.valColTextBox}}
               {{  get_clause(joinclause,'from')  }}
               UNPIVOT {%if desiredState.config.includenull %}INCLUDE NULLS ( {%endif%}{{desiredState.config.valColTextBox}} FOR {{desiredState.config.nameColTextBox}} IN ({{ns.collist|join(',')}}{%if desiredState.config.includenull %} ){%endif%})
               {{ get_clause(joinclause) }}
             )
         {%elif desiredState.config.inferunpivot == false and desiredState.node.materializationType != 'view'%}

            {% if currentState == undefined or (currentState != undefined and currentState.node.materializationType != desiredState.node.materializationType)  %}
               {{ stage('Create Pivot '+ ' {{desiredState.node.materializationType}}' , true, "sql", "create") }}
               CREATE OR REPLACE {{desiredState.node.materializationType}} {{ ref_no_link(desiredState.node.location.name, desiredState.node.name) }}
              (
                {% for col in desiredState.columns %}
                    "{{ col.name }}" {{ col.dataType }}
                    {%- if not col.nullable %} NOT NULL
                        {%- if col.defaultValue | length > 0 %} DEFAULT {{ col.defaultValue }}{% endif %}
                    {% endif %}
                    {%- if col.description | length > 0 %} COMMENT '{{ col.description | escape }}'{% endif %}
                    {%- if not loop.last -%}, {% endif %}
                {% endfor %}
               )
              {%- if desiredState.node.description | length > 0 %} COMMENT = '{{ desiredState.node.description | escape }}'{% endif %}
           {% endif %}
           
            {% if currentState != undefined%}
               
                    {# Change Node Name or Change Storage Location #}
                    {# Storage Location Tests #}

                 {% set nsVariables = namespace(storageLocationTest=true) %}

                 {# Test  #}
                 {%if currentState.storageLocations|length == 0%}          
                    {% set currentDatabase = currentState.storageLocations | selectattr('name', 'equalto', currentState.node.location.name) | map(attribute='database') | string %}
                    {% set currentSchema = currentState.storageLocations | selectattr('name', 'equalto', currentState.node.location.name) | map(attribute='schema') | string %}
                    {% set currentDatabaseSchema = currentDatabase + '.' + currentSchema %}
               
                 {%else %}   
                    {# Current target node mappings #}
                     {% set currentDatabase = currentState.storageLocations | selectattr('name', 'equalto', currentState.node.location.name) | map(attribute='database') | first %}
                      {% set currentSchema = currentState.storageLocations | selectattr('name', 'equalto', currentState.node.location.name) | map(attribute='schema') | first %}
                      {% set currentDatabaseSchema = currentDatabase + '.' + currentSchema %}  
			     {% endif %}		 
        
                 {# Desired target node mappings #}
                 {% set desiredDatabase = desiredState.storageLocations | selectattr('name', 'equalto', desiredState.node.location.name) | map(attribute='database') | first %}
                 {% set desiredSchema = desiredState.storageLocations | selectattr('name', 'equalto', desiredState.node.location.name) | map(attribute='schema') | first %}
                  {% set desiredDatabaseSchema = desiredDatabase + '.' + desiredSchema %}           
            
                 {% if currentDatabaseSchema != desiredDatabaseSchema %}
                    {% set nsVariables.storageLocationTest = false %}
                 {% endif %}
			 
                 {# Rename / Move Object #}
                 {% if (nsVariables.storageLocationTest == false or currentState.node.name != desiredState.node.name) %}
                     {{ stage('Rename and / or Move Table', true, "sql", "alter") }}
                      {% set srcSchName = currentState.node.location.name %}
                      {% set cdb = currentState.storageLocations | selectattr('name', 'equalto', srcSchName) | map(attribute='database') | first %}
                      {% set csch = currentState.storageLocations | selectattr('name', 'equalto', srcSchName) | map(attribute='schema') | first %}

                     ALTER TABLE  "{{cdb}}"."{{csch}}"."{{currentState.node.name}}"
                     RENAME TO   {{ ref_no_link(desiredState.node.location.name, desiredState.node.name) }}
                 {% endif %}

                 {# Change table description #}
                 {% if (nsVariables.nodeCommentTest == false or currentState.node.description != desiredState.node.description) %}
                    {{ stage('Change table description', true, "sql", "alter") }}
                      ALTER TABLE {{ ref_no_link(desiredState.node.location.name, desiredState.node.name) }}
                     SET COMMENT = '{{ desiredState.node.description | escape }}'
                 {% endif %}
                 


                 {# Drop Columns #}
                 {% set nsVariables = namespace(colchanges=0) %}
                {% for dropCurCol in currentState.columns %}
                  {% if dropCurCol.id not in desiredState.columns | map(attribute="id") %}
                     {% set nsVariables.colchanges = nsVariables.colchanges + 1 %}

                    {% if nsVariables.colchanges == 1 %}
                        {{ stage('Drop Columns', true, "sql", "alter") }}
                        ALTER TABLE {{ ref_no_link(desiredState.node.location.name, desiredState.node.name) }}
                        DROP COLUMN 
                    {% else %}
                        , 
                    {% endif %}
                    "{{ dropCurCol.name }}"
                  {% endif %}
                 {% endfor %}

              {# Add Columns #}
              {% set nsVariables = namespace(colchanges=0) %}
              {% for addDesCol in desiredState.columns %}
                 {% if addDesCol.id not in currentState.columns | map(attribute="id") %}
                   {% set nsVariables.colchanges = nsVariables.colchanges + 1 %}

                    {% if nsVariables.colchanges == 1 %}
                        {{ stage('Add Columns', true, "sql", "alter") }}
                        ALTER TABLE {{ ref_no_link(desiredState.node.location.name, desiredState.node.name) }}
                        ADD COLUMN
                    {% else %}
                        ,
                    {% endif %}
                        "{{ addDesCol.name }}" {{ addDesCol.dataType }}
                        {%- if not addDesCol.nullable %} NOT NULL
                            {%- if addDesCol.defaultValue | length > 0 %} DEFAULT {{ addDesCol.defaultValue }}{% endif %}
                        {% endif %}
                        {%- if addDesCol.description | length > 0 %} COMMENT '{{ addDescol.description | escape }}'{% endif %}
                 {% endif %}
               {% endfor %}

           
                {# Rename Columns #}
                {% for renameCurCol in currentState.columns %}
                 {% if renameCurCol.id in desiredState.columns | map(attribute="id") %}
                    {% set desiredColumnName = desiredState.columns | selectattr('id', 'equalto', renameCurCol.id) | map(attribute='name') | first %}
                    {% if renameCurCol.name != desiredColumnName %}
                        {{ stage('Rename Column ' + renameCurCol.name, true, "sql", "alter") }}
                        ALTER TABLE {{ ref_no_link(desiredState.node.location.name, desiredState.node.name) }}
                        RENAME COLUMN "{{ renameCurCol.name }}"
                        TO "{{ desiredColumnName }}"
                    {% endif %}
                 {% endif %}
                {% endfor %}
           
               {# Change data types etc #}
            {% set nsVariables.colchanges = 0 %}
            {% for alterCurCol in currentState.columns %}        
                {% if alterCurCol.id in desiredState.columns | map(attribute="id") %}
                    {% set currentDatatype = alterCurCol.dataType %}
                    {% set currentNullable = alterCurCol.nullable %}
                    {% set currentDefaultValue = alterCurCol.defaultValue %}
                    {% set currentDescription = alterCurCol.description %}

                    {% set desiredColumnName = desiredState.columns | selectattr('id', "equalto", alterCurCol.id) | map(attribute='name') | first %}
                    {% set desiredDatatype = desiredState.columns | selectattr('id', "equalto", alterCurCol.id) | map(attribute='dataType') | first %}
                    {% set desiredNullable = desiredState.columns | selectattr('id', "equalto", alterCurCol.id) | map(attribute='nullable') | first %}
                    {% set desiredDefaultValue = desiredState.columns | selectattr('id', "equalto", alterCurCol.id) | map(attribute='defaultValue') | first %}
                    {% set desiredDescription = desiredState.columns | selectattr('id', "equalto", alterCurCol.id) | map(attribute='description') | first %}

                    {% set datatypeTest = currentDatatype == desiredDatatype %}
                    {% set nullableTest = currentNullable == desiredNullable %}
                    {% set defaultValueTest = currentDefaultValue == desiredDefaultValue %}
                    {% set descriptionTest = currentDescription == desiredDescription %}

                    {% if (datatypeTest == false or 
                            nullableTest == false  or
                            defaultValueTest == false or
                            descriptionTest == false) %}
                        {% set nsVariables.colchanges = nsVariables.colchanges + 1 %}

                        {% if nsVariables.colchanges == 1 %}
                            {{ stage('Change Column Attributes', true, "sql", "alter") }}
                            ALTER TABLE {{ ref_no_link(desiredState.node.location.name, desiredState.node.name) }}
                            MODIFY
                        {% endif %}
                        {% if datatypeTest == false %}
                            {% if nsVariables.colchanges > 1 %},{% endif %}
                            COLUMN "{{ desiredColumnName }}"
                            SET DATA TYPE {{ desiredDatatype }}
                            {% set nsVariables.colchanges = nsVariables.colchanges + 1 %}
                        {% endif %}
                        {% if nullableTest == false %}
                            {% if nsVariables.colchanges > 1 %},{% endif %}
                            COLUMN "{{ desiredColumnName }}"
                            {% if currentNullable == true %}
                                SET
                            {% else %}
                                DROP
                            {% endif %}
                            NOT NULL
                            {% set nsVariables.colchanges = nsVariables.colchanges + 1 %}
                        {% endif %}
                        {% if descriptionTest == false %}
                            {% if nsVariables.colchanges > 1 %},{% endif %}
                            COLUMN "{{ desiredColumnName }}"
                            COMMENT '{{ desiredDescription |escape }}'
                            {% set nsVariables.colchanges = nsVariables.colchanges + 1 %}
                        {% endif %}
                        {% if defaultValueTest == false %}
                            {% if nsVariables.colchanges > 1 %},{% endif %}
                            COLUMN "{{ desiredColumnName }}"
                            {% if desiredDefaultValue == '' %}
                                DROP DEFAULT
                            {% else %}
                                SET DEFAULT {{ desiredDefaultValue }}
                            {% endif %}
                            {% set nsVariables.colchanges = nsVariables.colchanges + 1 %}
                        {% endif %}
                        
                    {% else %}
                                            
                    {% endif %}
                {% endif %}
            {% endfor %}     
            {%endif%}

         {%endif%}
        
{%else%}

{{ stage('Nothing to do.') }}
select 1 = 0

{% endif %}